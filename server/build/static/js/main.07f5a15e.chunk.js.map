{"version":3,"sources":["components/Home/Header/Header.jsx","api/itemFinder.js","hooks/useDidMountEffect.js","components/Home/ItemsList/ItemModal/CreateData/CreateData.jsx","components/Home/ItemsList/ItemModal/ItemModal.jsx","components/Home/ItemsList/ItemsList.jsx","components/Home/AddItem/AddItem.jsx","components/Home/Home.jsx","App.jsx","index.jsx"],"names":["Title","Typography","Header","justify","style","fontSize","axios","create","baseURL","useDidMountEffect","func","deps","didMount","useRef","useEffect","current","CreateData","item","handleIsCreating","handleItemData","onFinish","values","a","updatedItem","title","description","data","key","value","itemFinder","put","_id","console","log","name","onFinishFailed","errorInfo","Item","label","rules","required","message","type","htmlType","Paragraph","ItemModal","visible","onCancel","useState","setTitle","setDescription","itemData","setItemData","isCreating","setIsCreating","updateItem","footer","editable","onChange","level","autoSize","maxRows","minRows","display","icon","PlusOutlined","color","shape","position","marginLeft","bottom","onClick","updatedItemData","gutter","map","span","placement","onConfirm","id","itemIndex","findIndex","target","splice","handleDataRemove","okText","cancelText","danger","size","DeleteOutlined","left","top","zIndex","newKeyValue","handleDataKeyChange","newValue","handleDataValueChange","ItemsList","items","deleteHandler","itemUpdated","setVisible","selectedItem","setSelectedItem","handleDelete","e","stopPropagation","delete","newItemsArray","filter","columns","dataIndex","ellipsis","render","margin","dataSource","pagination","onRow","r","row","handleRowClick","width","rowKey","record","className","TextArea","Input","AddItem","onCreate","Form","useForm","form","onOk","validateFields","then","resetFields","catch","info","layout","rows","List","fields","add","remove","field","marginBottom","align","fieldKey","placeholder","MinusCircleOutlined","block","Footer","Layout","Home","setItems","setItemUpdated","fetchData","get","response","post","padding","height","textAlign","App","exact","path","component","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.07f5a15e.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst Header = () => (\n  <Row justify=\"center\">\n    <Title style={{ fontSize: 'xxx-large' }}>Items Collection</Title>\n  </Row>\n);\n\nexport default Header;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://uptoo.herokuapp.com/api/items',\n});\n","import { useEffect, useRef } from 'react';\n\nconst useDidMountEffect = (func, deps) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) func();\n    else didMount.current = true;\n  }, deps);\n};\n\nexport default useDidMountEffect;\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport itemFinder from '../../../../../api/itemFinder';\n\nconst CreateData = ({ item, handleIsCreating, handleItemData }) => {\n  const onFinish = async (values) => {\n    const updatedItem = {\n      title: item.title,\n      description: item.description,\n      data: {\n        key: values.key,\n        value: values.value,\n      },\n    };\n    await itemFinder.put(`/${item._id}`, updatedItem);\n    console.log(updatedItem.data);\n    handleIsCreating(false);\n    handleItemData(updatedItem.data);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Clé\"\n        name=\"key\"\n        rules={[{ required: true, message: 'Rentrez la clé de votre donnée' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Valeur\"\n        name=\"value\"\n        rules={[{ required: true, message: 'Rentrez la valeur de votre donnée' }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Créer\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default CreateData;\n","import React, { useState } from 'react';\nimport {\n  Modal, Card, Divider, Col, Row, Typography, Button, Popconfirm,\n} from 'antd';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport itemFinder from '../../../../api/itemFinder';\nimport useDidMountEffect from '../../../../hooks/useDidMountEffect';\nimport CreateData from './CreateData/CreateData';\n\nconst { Title, Paragraph } = Typography;\n\nconst ItemModal = ({ item, visible, onCancel }) => {\n  const [title, setTitle] = useState(item.title);\n  const [description, setDescription] = useState(item.description);\n  const [itemData, setItemData] = useState(item.data);\n  const [isCreating, setIsCreating] = useState(false);\n\n  useDidMountEffect(() => {\n    const updateItem = async () => {\n      await itemFinder.put(`/${item._id}`, {\n        title,\n        description,\n        data: [...itemData],\n      });\n    };\n    updateItem();\n  }, [title, description, itemData]);\n\n  const handleDataKeyChange = (newKeyValue, id) => {\n    const itemIndex = itemData.findIndex((target) => target._id === id);\n    itemData[itemIndex].key = newKeyValue;\n    setItemData([...itemData]);\n  };\n\n  const handleDataValueChange = (newValue, id) => {\n    const itemIndex = itemData.findIndex((target) => target._id === id);\n    itemData[itemIndex].value = newValue;\n    setItemData([...itemData]);\n  };\n\n  const handleDataRemove = (id) => {\n    const itemIndex = itemData.findIndex((target) => target._id === id);\n    itemData.splice(itemIndex, 1);\n    setItemData([...itemData]);\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      footer={null}\n      onCancel={onCancel}\n    >\n      <Title\n        editable={{ onChange: setTitle }}\n        level={1}\n      >\n        {title}\n      </Title>\n      <Paragraph\n        editable={{\n          onChange: setDescription,\n          autoSize: { maxRows: 5, minRows: 3 },\n        }}\n      >\n        {description}\n      </Paragraph>\n      <div>\n        <Title\n          level={3}\n          style={{ display: 'inline-block' }}\n        >\n          Data :\n        </Title>\n        <Button\n          icon={<PlusOutlined style={{ color: '#1890ff' }} />}\n          shape=\"circle\"\n          style={{\n            position: 'relative',\n            marginLeft: '20px',\n            bottom: '2px',\n          }}\n          onClick={() => setIsCreating(!isCreating)}\n        />\n      </div>\n      {isCreating\n        && (\n        <CreateData\n          item={item}\n          handleIsCreating={(value) => setIsCreating(value)}\n          handleItemData={(updatedItemData) => setItemData([...itemData, updatedItemData])}\n        />\n        )}\n      <Row gutter={[16, 16]}>\n        {itemData.map((data) => (\n          <Col span={12} key={data._id}>\n            <Popconfirm\n              placement=\"top\"\n              title=\"Etes-vous certain de vouloir supprimer cette donnée ?\"\n              onConfirm={() => handleDataRemove(data._id)}\n              okText=\"Oui\"\n              cancelText=\"Non\"\n            >\n              <Button\n                danger\n                size=\"small\"\n                shape=\"circle\"\n                icon={<DeleteOutlined style={{ color: 'red' }} />}\n                style={{\n                  position: 'relative',\n                  left: '214px',\n                  top: '14px',\n                  zIndex: '1',\n                }}\n              />\n            </Popconfirm>\n            <Card>\n              <Title level={5}>Clé:</Title>\n              <Paragraph\n                editable={{ onChange: (newKeyValue) => handleDataKeyChange(newKeyValue, data._id) }}\n              >\n                {data.key}\n              </Paragraph>\n              <Divider />\n              <Title level={5}>Valeur:</Title>\n              <Paragraph\n                editable={{\n                  onChange: (newValue) => handleDataValueChange(newValue, data._id),\n                }}\n              >\n                {data.value}\n              </Paragraph>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Modal>\n  );\n};\n\nexport default ItemModal;\n","import React, { useState } from 'react';\nimport {\n  Row, Button, Table, Popconfirm,\n} from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport itemFinder from '../../../api/itemFinder';\nimport ItemModal from './ItemModal/ItemModal';\nimport './index.css';\n\nconst ItemsList = ({ items, deleteHandler, itemUpdated }) => {\n  const [visible, setVisible] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const handleDelete = async (e, id) => {\n    e.stopPropagation();\n    try {\n      await itemFinder.delete(`/${id}`);\n      const newItemsArray = items.filter((item) => item._id !== id);\n      deleteHandler(newItemsArray);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleRowClick = (row) => {\n    setVisible(true);\n    setSelectedItem(row);\n  };\n\n  const columns = [\n    {\n      title: 'Titre',\n      dataIndex: 'title',\n      key: 'title',\n      ellipsis: true,\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      ellipsis: true,\n    },\n    {\n      title: 'Action',\n      key: 'delete',\n      render: (item) => (\n        <>\n          <Popconfirm\n            placement=\"top\"\n            title=\"Etes-vous certain de vouloir supprimer cet item ?\"\n            onConfirm={(e) => handleDelete(e, item._id)}\n            onCancel={(e) => e.stopPropagation()}\n            okText=\"Oui\"\n            cancelText=\"Non\"\n          >\n            <Button\n              danger\n              shape=\"circle\"\n              style={{ margin: 'auto', display: 'block' }}\n              icon={<DeleteOutlined style={{ color: 'red' }} />}\n              onClick={(e) => e.stopPropagation()}\n            />\n          </Popconfirm>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <Row justify=\"center\">\n      {items\n        && (\n        <Table\n          columns={columns}\n          dataSource={items}\n          pagination={false}\n          onRow={(r) => ({\n            onClick: () => { handleRowClick(r); },\n          })}\n          style={{ width: '50vw' }}\n          rowKey={(record) => record._id}\n          className=\"myTable\"\n        />\n        )}\n      {visible\n        && (\n        <ItemModal\n          visible\n          onCancel={(e) => {\n            e.stopPropagation();\n            setVisible(false);\n            itemUpdated(true);\n          }}\n          item={selectedItem}\n        />\n        )}\n    </Row>\n  );\n};\n\nexport default ItemsList;\n","import React from 'react';\nimport {\n  Form, Input, Modal, Button, Space,\n} from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst { TextArea } = Input;\n\nconst AddItem = ({ visible, onCreate, onCancel }) => {\n  const [form] = Form.useForm();\n\n  return (\n    <Modal\n      title=\"Ajouter un nouvel item\"\n      visible={visible}\n      okText=\"Créer\"\n      cancelText=\"Annuler\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch((info) => {\n            console.log('La validation a échouée:', info);\n          });\n      }}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        name=\"basic\"\n      >\n        <Form.Item\n          label=\"Titre\"\n          name=\"title\"\n          rules={[{ required: true, message: 'Rentrez le titre du nouvel item' }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Description\"\n          name=\"description\"\n          rules={[{ required: true, message: 'Rentrez la description de votre item' }]}\n        >\n          <TextArea rows={4} />\n        </Form.Item>\n        <Form.List name=\"data\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field) => (\n                <Space key={field.key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'key']}\n                    fieldKey={[field.fieldKey, 'key']}\n                    rules={[{ required: true, message: 'Rentrez la clé de votre donnée' }]}\n                  >\n                    <Input placeholder=\"Clé\" />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'value']}\n                    fieldKey={[field.fieldKey, 'value']}\n                    rules={[{ required: true, message: 'Rentrez la valeur de votre donnée' }]}\n                  >\n                    <Input placeholder=\"Valeur\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Ajouter des données\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddItem;\n","import React, { useState, useEffect } from 'react';\nimport { Layout, Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Header from './Header/Header';\nimport ItemsList from './ItemsList/ItemsList';\nimport AddItem from './AddItem/AddItem';\nimport itemFinder from '../../api/itemFinder';\n\nconst { Footer } = Layout;\n\nconst Home = () => {\n  const [visible, setVisible] = useState(false);\n  const [items, setItems] = useState([]);\n  const [itemUpdated, setItemUpdated] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const response = await itemFinder.get('/');\n      setItems(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onCreate = async (values) => {\n    console.log(values);\n    await itemFinder.post('/', {\n      title: values.title,\n      description: values.description,\n      data: values.data,\n    });\n    setVisible(false);\n    fetchData();\n  };\n\n  useEffect(() => {\n    if (itemUpdated) {\n      fetchData();\n      setItemUpdated(false);\n    }\n  }, [itemUpdated]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {items\n      && (\n      <Layout style={{\n        padding: '8vw 10vw',\n        height: '100vh',\n      }}\n      >\n        <Header />\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          size=\"large\"\n          onClick={() => setVisible(true)}\n          icon={<PlusOutlined />}\n          style={{\n            width: 'fit-content',\n            margin: '40px auto',\n          }}\n        >\n          Ajouter un Item\n        </Button>\n        <AddItem\n          visible={visible}\n          onCreate={onCreate}\n          onCancel={() => {\n            setVisible(false);\n          }}\n        />\n        <ItemsList\n          items={items}\n          deleteHandler={(newItemsArray) => setItems(newItemsArray)}\n          itemUpdated={(value) => setItemUpdated(value)}\n        />\n        <Footer style={{\n          textAlign: 'center',\n          position: 'sticky',\n          bottom: '0',\n        }}\n        >\n          Test Technique Uptoo\n        </Footer>\n      </Layout>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home/Home';\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}